#!/bin/sh
#
# Copyright (C) 2009 Paul Bender.
#
# This file is part of eventlircd.
#
# eventlircd is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.
#
# eventlircd is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with eventlircd.  If not, see <http://www.gnu.org/licenses/>.

ABSOLUTE_LINUX_INPUT_H=@ABSOLUTE_LINUX_INPUT_H@
AWK=@AWK@
GREP=@GREP@

rm -f event_name_to_code.h

echo "#ifndef _LIRCUDEVD_EVENT_NAME_TO_CODE_H_" >> event_name_to_code.h
echo "#define _LIRCUDEVD_EVENT_NAME_TO_CODE_H_ 1" >> event_name_to_code.h

echo "#include <${ABSOLUTE_LINUX_INPUT_H}>" >> event_name_to_code.h
echo "#include <linux/types.h>" >> event_name_to_code.h

echo "static const struct" >> event_name_to_code.h
echo "{" >> event_name_to_code.h
echo "    const char *name;" >> event_name_to_code.h
echo "    __u16 type;" >> event_name_to_code.h
echo "    __u16 code;" >> event_name_to_code.h
echo "} event_name_to_code[] =" >> event_name_to_code.h
echo "{" >> event_name_to_code.h
${AWK} "
    /#define SYN_/                {
                                    code_str = \"\\\"\" \$2 \"\\\"\";
                                    code_num = \$2;
                                    printf(\"    { %-25s , EV_SYN , %-23s },\n\", code_str, code_num);
                                  };
    /#define KEY_CNT/             { next; };
    /#define KEY_MAX/             { next; };
    /#define KEY_MIN_INTERESTING/ { next; };
    /#define KEY_RESERVED/        { next; };
    /#define KEY_/                {
                                    code_str = \"\\\"\" \$2 \"\\\"\";
                                    code_num = \$2;
                                    printf(\"    { %-25s , EV_KEY , %-23s },\n\", code_str, code_num);
                                  };
    /#define BTN_/                {
                                    code_str = \"\\\"\" \$2 \"\\\"\";
                                    code_num = \$2;
                                    printf(\"    { %-25s , EV_KEY , %-23s },\n\", code_str, code_num);
                                  };
    /#define REL_CNT/             { next; };
    /#define REL_MAX/             { next; };
    /#define REL_/                {
                                    code_str = \"\\\"\" \$2 \"\\\"\";
                                    code_num = \$2;
                                    printf(\"    { %-25s , EV_REL , %-23s },\n\", code_str, code_num);
                                  };
    /#define ABS_CNT/             { next; };
    /#define ABS_MAX/             { next; };
    /#define ABS_/                {
                                    code_str = \"\\\"\" \$2 \"\\\"\";
                                    code_num = \$2;
                                    printf(\"    { %-25s , EV_ABS , %-23s },\n\", code_str, code_num);
                                  };
    /#define MSC_CNT/             { next; };
    /#define MSC_MAX/             { next; };
    /#define MSC_/                {
                                    code_str = \"\\\"\" \$2 \"\\\"\";
                                    code_num = \$2;
                                    printf(\"    { %-25s , EV_MSC , %-23s },\n\", code_str, code_num);
                                  };
    /#define SW_CNT/              { next; };
    /#define SW_MAX/              { next; };
    /#define SW_/                 {
                                    code_str = \"\\\"\" \$2 \"\\\"\";
                                    code_num = \$2;
                                    printf(\"    { %-25s , EV_SW  , %-23s },\n\", code_str, code_num);
                                  };
    /#define LED_CNT/             { next; };
    /#define LED_MAX/             { next; };
    /#define LED_/                {
                                    code_str = \"\\\"\" \$2 \"\\\"\";
                                    code_num = \$2;
                                    printf(\"    { %-25s , EV_LED , %-23s },\n\", code_str, code_num);
                                  };
    /#define SND_CNT/             { next; };
    /#define SND_MAX/             { next; };
    /#define SND_/                {
                                    code_str = \"\\\"\" \$2 \"\\\"\";
                                    code_num = \$2;
                                    printf(\"    { %-25s , EV_SND , %-23s },\n\", code_str, code_num);
                                  };
    " < ${ABSOLUTE_LINUX_INPUT_H} >> event_name_to_code.h
echo "    { NULL                      , 0      , 0                       }," >> event_name_to_code.h
echo "};" >> event_name_to_code.h

echo "#endif" >> event_name_to_code.h
